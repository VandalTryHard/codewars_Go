/*
7 kyu
Sum Even Fibonacci Numbers
Sum Even Fibonacci Numbers

    Write a func named SumEvenFibonacci that takes a parameter of type int and returns a value of type int

    Generate all of the Fibonacci numbers starting with 1 and 2 and ending on the highest number before
	exceeding the parameter's value

Each new number in the Fibonacci sequence is generated by adding the previous two numbers - by starting
with 1 and 2(the input could be smaller), the first 10 numbers will be:

 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

    Sum all of the even numbers you generate and return that int

Example:

sumEvenFibonacci(8) // returns 10 by adding the even values 2 and 8

Fundamentals
*/

/*
package kata

func SumEvenFibonacci(limit int) int {
	a, b := 1, 1
	total := 0
	for a <= limit {
		if a%2 == 0 {
			total += a
		}
		a, b = b, a+b //the real formula for Fibonacci sequence
	}
	return total
}
*/

//How this works
package main

import "fmt"

func main() {
	fmt.Println(SumEvenFibonacci(111111))
	fmt.Println(SumEvenFibonacci(8675309))
	fmt.Println(SumEvenFibonacci(1))
}

func SumEvenFibonacci(limit int) int {
	sum, a, b := 2, 1, 2
	for b <= limit {
		a, b = b, a+b //the real formula for Fibonacci sequence
		if b%2 == 0 {
			sum += b
		}
	}
	return sum
}
